const requestAdoption = async (post) => {
    if (loadingRequest) return;
    setLoadingRequest(true);
    const loggedInUser = localStorage.getItem('loggedInUser');
    if (!loggedInUser) {
      setLoadingRequest(false);
      navigate('/login');
      return;
    }
    const userObj = JSON.parse(loggedInUser);
    try {
      await axios.post(`http://localhost:3000/api/users/${post.user._id}/adoption-requests`, {
        requesterId: userObj._id,
        requesterName: userObj.name,
        petType: post.petType,
        description: post.description,
        location: post.location,
        imageUrl: post.imageUrl,
        postId: post._id,
      });
      await fetchRequestedPosts();
    } catch (error) {
      console.error('Failed to send adoption request', error);
    } finally {
      setLoadingRequest(false);
    }
  };

  const hasRequested = (postId) => {
    return requestedPosts.includes(postId);
  };

  return (
    <div className="dashboard-container">
      <header className="dashboard-header">
        <h1>Adoption Posts</h1>
      </header>
      <div className="dashboard-body">
        <nav className="dashboard-sidebar">
          <ul>
            <li><a href="/dashboard">Dashboard</a></li>
            <li><a href="#marketplace">Marketplace</a></li>
            <li><a href="/profile">Profile</a></li>
            <li><button onClick={() => { localStorage.removeItem('loggedInUser'); navigate('/login'); }} className="logout-button">Logout</button></li>
          </ul>
        </nav>
        <main className="dashboard-main">
          {message && <p style={{ color: 'green', marginBottom: '15px' }}>{message}</p>}
          <form onSubmit={handleSubmit} style={{ marginBottom: '30px', display: 'flex', flexDirection: 'column', gap: '15px' }}>
            <label>
              Pet Type:
              <select name="petType" value={formData.petType} onChange={handleChange} required style={{ width: '100%', padding: '8px', marginTop: '5px' }}>
                <option value="cat">Cat</option>
                <option value="dog">Dog</option>
                <option value="bird">Bird</option>
                <option value="fish">Fish</option>
                <option value="others">Others</option>
              </select>
            </label>
            <label>
              Description:
              <textarea
                name="description"
                value={formData.description}
                onChange={handleChange}
                required
                maxLength={500}
                style={{ width: '100%', padding: '8px', marginTop: '5px', borderRadius: '4px', border: '1px solid #ccc' }}
              />
            </label>
            <label>
              Location:
              <input
                type="text"
                name="location"
                value={formData.location}
                onChange={handleChange}
                required
                style={{ width: '100%', padding: '8px', marginTop: '5px', borderRadius: '4px', border: '1px solid #ccc' }}
              />
            </label>
            <label>
              Image:
              <input
                type="file"
                name="image"
                accept="image/*"
                onChange={handleChange}
                required
                style={{ marginTop: '5px' }}
              />
            </label>
            <button type="submit" className="twitter-button new-post-button">Create Adoption Post</button>
          </form>
          <div className="feed">
            {adoptionPosts.length === 0 ? (
              <p>No adoption posts available.</p>
            ) : (
              adoptionPosts.map(post => {
                const loggedInUser = localStorage.getItem('loggedInUser');
                const currentUser = loggedInUser ? JSON.parse(loggedInUser).name : null;
                const showRequestButton = currentUser && currentUser !== post.user.name;
                return (
                  <div key={post._id} className="tweet" style={{ marginBottom: '20px' }}>
                    <div className="tweet-header">
                      <span className="tweet-user">{post.user.name}</span>
                      <span className="tweet-timestamp">{new Date(post.timestamp).toLocaleString()}</span>
                    </div>
                    <div><strong>Pet Type:</strong> {post.petType}</div>
                    <div className="tweet-content">{post.description}</div>
                    <div><strong>Location:</strong> {post.location}</div>
                    {post.imageUrl && <img src={`http://localhost:3000${post.imageUrl}`} alt="Pet" style={{ maxWidth: '100%', marginTop: '10px', borderRadius: '8px' }} />}
                    {showRequestButton && !hasRequested(post._id) && (
                      <button
                        style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '4px', cursor: 'pointer' }}
                        onClick={() => requestAdoption(post)}
                        disabled={loadingRequest}
                      >
                        Request Adoption
                      </button>
                    )}
                    {showRequestButton && hasRequested(post._id) && (
                      <button
                        style={{ marginTop: '10px', padding: '8px 12px', backgroundColor: '#6c757d', color: '#fff', border: 'none', borderRadius: '4px', cursor: 'not-allowed' }}
                        disabled
                      >
                        Requested
                      </button>
                    )}
                  </div>
                );
              })
            )}
          </div>
        </main>
      </div>
    </div>
  );
}

export default Adoption;
